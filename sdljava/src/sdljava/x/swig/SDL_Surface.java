/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.22
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdljava.x.swig;

public class SDL_Surface {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SDL_Surface(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SDL_Surface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      SWIG_SDLVideo.SDL_FreeSurface(this);
    }
    swigCPtr = 0;
  }

  public void setFlags(long flags) {
    SWIG_SDLVideoJNI.set_SDL_Surface_flags(swigCPtr, flags);
  }

  public long getFlags() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_flags(swigCPtr);
  }

  public void setFormat(SDL_PixelFormat format) {
    SWIG_SDLVideoJNI.set_SDL_Surface_format(swigCPtr, SDL_PixelFormat.getCPtr(format));
  }

  public SDL_PixelFormat getFormat() {
    long cPtr = SWIG_SDLVideoJNI.get_SDL_Surface_format(swigCPtr);
    return (cPtr == 0) ? null : new SDL_PixelFormat(cPtr, false);
  }

  public void setW(int w) {
    SWIG_SDLVideoJNI.set_SDL_Surface_w(swigCPtr, w);
  }

  public int getW() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_w(swigCPtr);
  }

  public void setH(int h) {
    SWIG_SDLVideoJNI.set_SDL_Surface_h(swigCPtr, h);
  }

  public int getH() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_h(swigCPtr);
  }

  public void setPitch(int pitch) {
    SWIG_SDLVideoJNI.set_SDL_Surface_pitch(swigCPtr, pitch);
  }

  public int getPitch() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_pitch(swigCPtr);
  }

  public void setOffset(int offset) {
    SWIG_SDLVideoJNI.set_SDL_Surface_offset(swigCPtr, offset);
  }

  public int getOffset() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_offset(swigCPtr);
  }

  public void setHwdata(SWIGTYPE_p_private_hwdata hwdata) {
    SWIG_SDLVideoJNI.set_SDL_Surface_hwdata(swigCPtr, SWIGTYPE_p_private_hwdata.getCPtr(hwdata));
  }

  public SWIGTYPE_p_private_hwdata getHwdata() {
    long cPtr = SWIG_SDLVideoJNI.get_SDL_Surface_hwdata(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_private_hwdata(cPtr, false);
  }

  public void setClip_rect(SDL_Rect clip_rect) {
    SWIG_SDLVideoJNI.set_SDL_Surface_clip_rect(swigCPtr, SDL_Rect.getCPtr(clip_rect));
  }

  public SDL_Rect getClip_rect() {
    long cPtr = SWIG_SDLVideoJNI.get_SDL_Surface_clip_rect(swigCPtr);
    return (cPtr == 0) ? null : new SDL_Rect(cPtr, false);
  }

  public void setUnused1(long unused1) {
    SWIG_SDLVideoJNI.set_SDL_Surface_unused1(swigCPtr, unused1);
  }

  public long getUnused1() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_unused1(swigCPtr);
  }

  public void setLocked(long locked) {
    SWIG_SDLVideoJNI.set_SDL_Surface_locked(swigCPtr, locked);
  }

  public long getLocked() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_locked(swigCPtr);
  }

  public void setMap(SWIGTYPE_p_SDL_BlitMap map) {
    SWIG_SDLVideoJNI.set_SDL_Surface_map(swigCPtr, SWIGTYPE_p_SDL_BlitMap.getCPtr(map));
  }

  public SWIGTYPE_p_SDL_BlitMap getMap() {
    long cPtr = SWIG_SDLVideoJNI.get_SDL_Surface_map(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_BlitMap(cPtr, false);
  }

  public void setFormat_version(long format_version) {
    SWIG_SDLVideoJNI.set_SDL_Surface_format_version(swigCPtr, format_version);
  }

  public long getFormat_version() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_format_version(swigCPtr);
  }

  public void setRefcount(int refcount) {
    SWIG_SDLVideoJNI.set_SDL_Surface_refcount(swigCPtr, refcount);
  }

  public int getRefcount() {
    return SWIG_SDLVideoJNI.get_SDL_Surface_refcount(swigCPtr);
  }

  public SDL_Surface() {
    this(SWIG_SDLVideoJNI.new_SDL_Surface(), true);
  }

}
