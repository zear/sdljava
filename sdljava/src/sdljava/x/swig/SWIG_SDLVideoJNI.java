/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.22
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdljava.x.swig;

import java.nio.*;

class SWIG_SDLVideoJNI {
  public final static native void set_SDL_Rect_x(long jarg1, short jarg2);
  public final static native short get_SDL_Rect_x(long jarg1);
  public final static native void set_SDL_Rect_y(long jarg1, short jarg2);
  public final static native short get_SDL_Rect_y(long jarg1);
  public final static native void set_SDL_Rect_w(long jarg1, int jarg2);
  public final static native int get_SDL_Rect_w(long jarg1);
  public final static native void set_SDL_Rect_h(long jarg1, int jarg2);
  public final static native int get_SDL_Rect_h(long jarg1);
  public final static native long new_SDL_Rect();
  public final static native void delete_SDL_Rect(long jarg1);
  public final static native void set_SDL_Color_r(long jarg1, short jarg2);
  public final static native short get_SDL_Color_r(long jarg1);
  public final static native void set_SDL_Color_g(long jarg1, short jarg2);
  public final static native short get_SDL_Color_g(long jarg1);
  public final static native void set_SDL_Color_b(long jarg1, short jarg2);
  public final static native short get_SDL_Color_b(long jarg1);
  public final static native void set_SDL_Color_unused(long jarg1, short jarg2);
  public final static native short get_SDL_Color_unused(long jarg1);
  public final static native long new_SDL_Color();
  public final static native void delete_SDL_Color(long jarg1);
  public final static native void set_SDL_Palette_ncolors(long jarg1, int jarg2);
  public final static native int get_SDL_Palette_ncolors(long jarg1);
  public final static native void set_SDL_Palette_colors(long jarg1, long jarg2);
  public final static native long get_SDL_Palette_colors(long jarg1);
  public final static native long new_SDL_Palette();
  public final static native void delete_SDL_Palette(long jarg1);
  public final static native void set_SDL_PixelFormat_palette(long jarg1, long jarg2);
  public final static native long get_SDL_PixelFormat_palette(long jarg1);
  public final static native void set_SDL_PixelFormat_BitsPerPixel(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_BitsPerPixel(long jarg1);
  public final static native void set_SDL_PixelFormat_BytesPerPixel(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_BytesPerPixel(long jarg1);
  public final static native void set_SDL_PixelFormat_Rloss(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Rloss(long jarg1);
  public final static native void set_SDL_PixelFormat_Gloss(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Gloss(long jarg1);
  public final static native void set_SDL_PixelFormat_Bloss(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Bloss(long jarg1);
  public final static native void set_SDL_PixelFormat_Aloss(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Aloss(long jarg1);
  public final static native void set_SDL_PixelFormat_Rshift(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Rshift(long jarg1);
  public final static native void set_SDL_PixelFormat_Gshift(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Gshift(long jarg1);
  public final static native void set_SDL_PixelFormat_Bshift(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Bshift(long jarg1);
  public final static native void set_SDL_PixelFormat_Ashift(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_Ashift(long jarg1);
  public final static native void set_SDL_PixelFormat_Rmask(long jarg1, long jarg2);
  public final static native long get_SDL_PixelFormat_Rmask(long jarg1);
  public final static native void set_SDL_PixelFormat_Gmask(long jarg1, long jarg2);
  public final static native long get_SDL_PixelFormat_Gmask(long jarg1);
  public final static native void set_SDL_PixelFormat_Bmask(long jarg1, long jarg2);
  public final static native long get_SDL_PixelFormat_Bmask(long jarg1);
  public final static native void set_SDL_PixelFormat_Amask(long jarg1, long jarg2);
  public final static native long get_SDL_PixelFormat_Amask(long jarg1);
  public final static native void set_SDL_PixelFormat_colorkey(long jarg1, long jarg2);
  public final static native long get_SDL_PixelFormat_colorkey(long jarg1);
  public final static native void set_SDL_PixelFormat_alpha(long jarg1, short jarg2);
  public final static native short get_SDL_PixelFormat_alpha(long jarg1);
  public final static native long new_SDL_PixelFormat();
  public final static native void delete_SDL_PixelFormat(long jarg1);
  public final static native void set_SDL_Surface_flags(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_flags(long jarg1);
  public final static native void set_SDL_Surface_format(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_format(long jarg1);
  public final static native void set_SDL_Surface_w(long jarg1, int jarg2);
  public final static native int get_SDL_Surface_w(long jarg1);
  public final static native void set_SDL_Surface_h(long jarg1, int jarg2);
  public final static native int get_SDL_Surface_h(long jarg1);
  public final static native void set_SDL_Surface_pitch(long jarg1, int jarg2);
  public final static native int get_SDL_Surface_pitch(long jarg1);
  public final static native void set_SDL_Surface_offset(long jarg1, int jarg2);
  public final static native int get_SDL_Surface_offset(long jarg1);
  public final static native void set_SDL_Surface_hwdata(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_hwdata(long jarg1);
  public final static native void set_SDL_Surface_clip_rect(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_clip_rect(long jarg1);
  public final static native void set_SDL_Surface_unused1(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_unused1(long jarg1);
  public final static native void set_SDL_Surface_locked(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_locked(long jarg1);
  public final static native void set_SDL_Surface_map(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_map(long jarg1);
  public final static native void set_SDL_Surface_format_version(long jarg1, long jarg2);
  public final static native long get_SDL_Surface_format_version(long jarg1);
  public final static native void set_SDL_Surface_refcount(long jarg1, int jarg2);
  public final static native int get_SDL_Surface_refcount(long jarg1);
  public final static native long new_SDL_Surface();
  public final static native void delete_SDL_Surface(long jarg1);
  public final static native void set_SDL_VideoInfo_hw_available(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_hw_available(long jarg1);
  public final static native void set_SDL_VideoInfo_wm_available(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_wm_available(long jarg1);
  public final static native void set_SDL_VideoInfo_UnusedBits1(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_UnusedBits1(long jarg1);
  public final static native void set_SDL_VideoInfo_UnusedBits2(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_UnusedBits2(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_hw(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_hw(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_hw_CC(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_hw_CC(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_hw_A(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_hw_A(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_sw(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_sw(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_sw_CC(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_sw_CC(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_sw_A(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_sw_A(long jarg1);
  public final static native void set_SDL_VideoInfo_blit_fill(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_blit_fill(long jarg1);
  public final static native void set_SDL_VideoInfo_UnusedBits3(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_UnusedBits3(long jarg1);
  public final static native void set_SDL_VideoInfo_video_mem(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_video_mem(long jarg1);
  public final static native void set_SDL_VideoInfo_vfmt(long jarg1, long jarg2);
  public final static native long get_SDL_VideoInfo_vfmt(long jarg1);
  public final static native long new_SDL_VideoInfo();
  public final static native void delete_SDL_VideoInfo(long jarg1);
  public final static native void set_SDL_Overlay_format(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_format(long jarg1);
  public final static native void set_SDL_Overlay_w(long jarg1, int jarg2);
  public final static native int get_SDL_Overlay_w(long jarg1);
  public final static native void set_SDL_Overlay_h(long jarg1, int jarg2);
  public final static native int get_SDL_Overlay_h(long jarg1);
  public final static native void set_SDL_Overlay_planes(long jarg1, int jarg2);
  public final static native int get_SDL_Overlay_planes(long jarg1);
  public final static native void set_SDL_Overlay_pitches(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_pitches(long jarg1);
  public final static native void set_SDL_Overlay_pixels(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_pixels(long jarg1);
  public final static native void set_SDL_Overlay_hwfuncs(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_hwfuncs(long jarg1);
  public final static native void set_SDL_Overlay_hwdata(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_hwdata(long jarg1);
  public final static native void set_SDL_Overlay_hw_overlay(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_hw_overlay(long jarg1);
  public final static native void set_SDL_Overlay_UnusedBits(long jarg1, long jarg2);
  public final static native long get_SDL_Overlay_UnusedBits(long jarg1);
  public final static native long new_SDL_Overlay();
  public final static native void delete_SDL_Overlay(long jarg1);
  public final static native String SDL_VideoDriverName(String jarg1, int jarg2);
  public final static native long SDL_GetVideoSurface();
  public final static native long SDL_GetVideoInfo();
  public final static native int SDL_VideoModeOK(int jarg1, int jarg2, int jarg3, long jarg4);
  public final static native long SDL_ListModes(long jarg1, long jarg2);
  public final static native long SDL_SetVideoMode(int jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void SDL_UpdateRects(long jarg1, int jarg2, long jarg3);
  public final static native void SDL_UpdateRect(long jarg1, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native int SDL_Flip(long jarg1);
  public final static native int SDL_SetGamma(float jarg1, float jarg2, float jarg3);
  public final static native int SDL_GetGammaRamp(int[] jarg1, int[] jarg2, int[] jarg3);
  public final static native int SDL_SetColors(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int SDL_SetPalette(long jarg1, int jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long SDL_MapRGB(long jarg1, short jarg2, short jarg3, short jarg4);
  public final static native long SDL_MapRGBA(long jarg1, short jarg2, short jarg3, short jarg4, short jarg5);
  public final static native void SDL_GetRGB(long jarg1, long jarg2, short[] jarg3, short[] jarg4, short[] jarg5);
  public final static native void SDL_GetRGBA(long jarg1, long jarg2, short[] jarg3, short[] jarg4, short[] jarg5, short[] jarg6);
  public final static native long SDL_CreateRGBSurface(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native void SDL_FreeSurface(long jarg1);
  public final static native int SDL_LockSurface(long jarg1);
  public final static native void SDL_UnlockSurface(long jarg1);
  public final static native int SDL_SetColorKey(long jarg1, long jarg2, long jarg3);
  public final static native int SDL_SetAlpha(long jarg1, long jarg2, short jarg3);
  public final static native int SWIG_SDL_SetClipRect(long jarg1, long jarg2);
  public final static native void SDL_GetClipRect(long jarg1, long jarg2);
  public final static native long SDL_ConvertSurface(long jarg1, long jarg2, long jarg3);
  public final static native long SDL_DisplayFormat(long jarg1);
  public final static native long SDL_DisplayFormatAlpha(long jarg1);
  public final static native void SDL_WarpMouse(int jarg1, int jarg2);
  public final static native long SDL_CreateCursor(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native long SDL_CreateYUVOverlay(int jarg1, int jarg2, long jarg3, long jarg4);
  public final static native int SDL_LockYUVOverlay(long jarg1);
  public final static native void SDL_UnlockYUVOverlay(long jarg1);
  public final static native int SDL_DisplayYUVOverlay(long jarg1, long jarg2);
  public final static native void SDL_FreeYUVOverlay(long jarg1);
  public final static native int SDL_GL_LoadLibrary(String jarg1);
  public final static native int SDL_GL_SetAttribute(int jarg1, int jarg2);
  public final static native int SDL_GL_GetAttribute(int jarg1, long jarg2);
  public final static native void SDL_GL_SwapBuffers();
  public final static native void SDL_GL_UpdateRects(int jarg1, long jarg2);
  public final static native void SDL_GL_Lock();
  public final static native void SDL_GL_Unlock();
  public final static native void SDL_WM_SetCaption(String jarg1, String jarg2);
  public final static native void SWIG_SDL_WM_GetCaption(String jarg1, String jarg2);
  public final static native void SDL_WM_SetIcon(long jarg1, short jarg2);
  public final static native int SDL_WM_IconifyWindow();
  public final static native int SDL_WM_ToggleFullScreen(long jarg1);
  public final static native int SDL_WM_GrabInput(int jarg1);
  public final static native long SWIG_SDL_LoadBMP(String jarg1);
  public final static native int SWIG_SDL_SaveBMP(long jarg1, String jarg2);
  public final static native int SWIG_SDL_FillRect_FAST(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6);
  public final static native int SWIG_SDL_BlitSurface_FAST(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, int jarg7, int jarg8, int jarg9, int jarg10);
  public final static native int SWIG_SDL_SetColors(long jarg1, SDL_Color[] jarg2, int jarg3, int jarg4);
  public final static native int SWIG_SDL_SetPalette(long jarg1, int jarg2, SDL_Color[] jarg3, int jarg4, int jarg5);
  public final static native void SWIG_GetPaletteColors(long jarg1, SDL_Color[] jarg2);
  public final static native int SWIG_SDL_SetGammaRamp(int[] jarg1, int[] jarg2, int[] jarg3);
  public final static native long SWIG_SDL_CreateRGBSurfaceFrom(int[] jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void SWIG_GetPixelData32(long jarg1, int[] jarg2);
  public final static native void SWIG_GetPixelData16(long jarg1, int[] jarg2);
  public final static native void SWIG_GetPixelData8(long jarg1, short[] jarg2);
  public final static native void SWIG_SetPixelData32(long jarg1, int[] jarg2);
  public final static native void SWIG_SetPixelData16(long jarg1, int[] jarg2);
  public final static native void SWIG_SetPixelData8(long jarg1, short[] jarg2);
  public final static native void SWIG_executeBlitQueue(Buffer jarg1, Buffer jarg2, Buffer jarg3, Buffer jarg4, long jarg5, Buffer jarg6, Buffer jarg7, Buffer jarg8, Buffer jarg9, long jarg10, int jarg11);
  public final static native int SWIG_SDL_MUSTLOCK(long jarg1);
  public final static native Object SWIG_getPixelDirectByteBuffer(long jarg1);
  public final static native Object SWIG_getOverlayPixelsDirectByteBuffer(long jarg1, int jarg2);
  public final static native int SWIG_displayYUVOverlay(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
}
